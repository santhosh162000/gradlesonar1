name: Release using custom scripts

on:
  workflow_dispatch

jobs:
  determine_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: oprypin/find-latest-tag@v1
        with:
          repository: santhosh162000/gradlesonar1  # The repository to scan.
          releases-only: true  # We know that all relevant tags have a GitHub release for them.
        id: gradlesonar1  # The step ID to refer to later.

      - run: echo "gradlesonar1 is at version ${{ steps.gradlesonar1.outputs.tag }}"

      - name: Get Latest Commit Message
        id: latest_commit_message
        run: |
          echo "::set-output name=commit_message::$(git log --format=%B -n 1)"

      - run : echo "Latest commit message is ${{ steps.latest_commit_message.outputs.commit_message }}"  

      - name: Testing some features
        run: |
          CURRENT_VERSION=${{ steps.gradlesonar1.outputs.tag }}
          MAJOR=$(echo $CURRENT_VERSION | cut -d '.' -f 1)
          MINOR=$(echo $CURRENT_VERSION | cut -d '.' -f 2)
          MAJOR="$MAJOR"
          echo "$MINOR"

      - name: Bump Version
        id: determine_version
        run: |
          COMMIT_MESSAGE="${{ steps.latest_commit_message.outputs.commit_message }}"

          if [[ $COMMIT_MESSAGE == testing ]]; then
            MAJOR=$((MAJOR + 1))
            MINOR=0
            PATCH=0
          elif [[ $COMMIT_MESSAGE == *"[minor]"* ]]; then
            MINOR=$((MINOR + 1))
            PATCH=0
          else
            PATCH=$((PATCH + 1))
          fi

          NEW_VERSION="${MAJOR}.${MINOR}.${PATCH}"
          echo "::set-output name=new_version::$NEW_VERSION"    

